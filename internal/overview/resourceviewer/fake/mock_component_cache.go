// Code generated by MockGen. DO NOT EDIT.
// Source: resourceviewer.go

// Package fake is a generated GoMock package.
package fake

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	queryer "github.com/heptio/developer-dash/internal/queryer"
	component "github.com/heptio/developer-dash/pkg/view/component"
	runtime "k8s.io/apimachinery/pkg/runtime"
	reflect "reflect"
)

// MockComponentCache is a mock of ComponentCache interface
type MockComponentCache struct {
	ctrl     *gomock.Controller
	recorder *MockComponentCacheMockRecorder
}

// MockComponentCacheMockRecorder is the mock recorder for MockComponentCache
type MockComponentCacheMockRecorder struct {
	mock *MockComponentCache
}

// NewMockComponentCache creates a new mock instance
func NewMockComponentCache(ctrl *gomock.Controller) *MockComponentCache {
	mock := &MockComponentCache{ctrl: ctrl}
	mock.recorder = &MockComponentCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockComponentCache) EXPECT() *MockComponentCacheMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockComponentCache) Get(arg0 context.Context, arg1 runtime.Object) (component.Component, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(component.Component)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockComponentCacheMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockComponentCache)(nil).Get), arg0, arg1)
}

// SetQueryer mocks base method
func (m *MockComponentCache) SetQueryer(arg0 queryer.Queryer) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetQueryer", arg0)
}

// SetQueryer indicates an expected call of SetQueryer
func (mr *MockComponentCacheMockRecorder) SetQueryer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetQueryer", reflect.TypeOf((*MockComponentCache)(nil).SetQueryer), arg0)
}
